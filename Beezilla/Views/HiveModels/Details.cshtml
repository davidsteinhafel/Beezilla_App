@model Beezilla.Models.HiveModel

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1>Details</h1>
<title>@ViewBag.Title</title>

<h2 style="background-color: Yellow;color: black; text-align: center; font-style: oblique">Here Are All of Your Hives!</h2>

<legend style="font-family: Arial Black; color: blue; font-size: large;">Check Bhubaneswar City</legend>

<div id="googleMap" style="height:400px;width:100%;"></div>
<script>

        function myMap() {
            var myCenter = new google.maps.LatLng(@Html.DisplayFor(model => model.HiveLat), @Html.DisplayFor(model => model.HiveLon));
            var mapProp = { center: myCenter, zoom: 12, scrollwheel: false, draggable: true, mapTypeId: google.maps.MapTypeId.ROADMAP };
            var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
            var marker = new google.maps.Marker({ position: myCenter });
            marker.setMap(map);
        }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBpYmz09ZN7UAG5dHUkUpJ1BiCBTw2TJqk&callback=myMap"></script>

<footer>
    <p style="background-color: Yellow; font-weight: bold; color:blue; text-align: center; font-style: oblique">© @DateTime.Now.ToLocalTime()</p> @*Add Date Time*@
</footer>
<div>
    <h4>HiveModel</h4>
    <hr />
    <dl class="row">
        <div class="card" style="width: 18rem;">
            <img class="card-img" src="@Model.HiveImageUrl">
        </div>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Temperament)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Temperament)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Brood)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Brood)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Size)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Size)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Supers)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Supers)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Species)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Species)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Mites)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Mites)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.HiveType)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.HiveType)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Propolis)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Propolis)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.HiveImageUrl)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.HiveImageUrl)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.QueenCells)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.QueenCells)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.HiveStrength)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.HiveStrength)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.SwarmPotential)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.SwarmPotential)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
<head>
    <script>
        window.onload = function () {

            var chart = new CanvasJS.Chart("chartContainer", {
                theme: "light2",
                animationEnabled: true,
                title: {
                    text: "Game of Thrones Viewers of the First Airing on HBO"
                },
                axisY: {
                    includeZero: false,
                    title: "Population",
                    suffix: "mn"
                },
                axisX: {
                    includeZero: false,
                    title: "Date",
                    suffix: ""
                },
                toolTip: {
                    shared: "true"
                },
                legend: {
                    cursor: "pointer",
                    itemclick: toggleDataSeries
                },
                data: [{
                    type: "spline",
                    visible: false,
                    showInLegend: true,
                    yValueFormatString: "###",
                    name: "Bee Population",
                    dataPoints: [
                        { label: "Jan", y: },
                        { label: "Feb" },
                        { label: "Apr", y: 2.44 },
                        { label: "Mar", y: 2.45 },
                        { label: "May", y: 2.58 },
                        { label: "Jun", y: 2.44 },
                        { label: "Ep. 7", y: 2.40 },
                        { label: "Ep. 8", y: 2.72 },
                        { label: "Ep. 9", y: 2.66 },
                        { label: "Ep. 10", y: 3.04 }
                    ]
                },
                {
                    type: "spline",
                    showInLegend: true,
                    yValueFormatString: "##.00mn",
                    name: "Varroa Mite Population",
                    dataPoints: [
                        { label: "Ep. 1", y: 10.11 },
                        { label: "Ep. 2", y: 9.27 },
                        { label: "Ep. 3", y: 9.25 },
                        { label: "Ep. 4", y: 10.17 },
                        { label: "Ep. 5", y: 10.72 },
                        { label: "Ep. 6", y: 10.24 },
                        { label: "Ep. 7", y: 12.07 }
                    ]
                }]
            });
            chart.render();

            function toggleDataSeries(e) {
                if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                    e.dataSeries.visible = false;
                } else {
                    e.dataSeries.visible = true;
                }
                chart.render();
            }

        }
    </script>
</head>
<body>
    <div id="chartContainer" style="height: 370px; width: 100%;"></div>
    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
</body>
<script async defer
        <src="https://maps.googleapis.com/maps/api/geocode/json?address=1600+Amphitheatre+Parkway,+Mountain+View,+CA&key=AIzaSyAyJKiNPaH91bLlhC-QCpRglCKgdWb9od8">
</script>
